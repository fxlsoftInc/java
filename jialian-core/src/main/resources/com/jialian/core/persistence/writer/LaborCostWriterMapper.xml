<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jialian.core.persistence.writer.LaborCostWriterMapper" >
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from labor_cost
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByWhere" parameterType="com.jialian.api.domain.entity.Where" >
    delete from labor_cost
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Example_Where_Clause" />
    </if>
  </delete>
  <insert useGeneratedKeys="true" keyProperty="id" id="insert" parameterType="com.jialian.api.domain.entity.LaborCost" >
    insert into labor_cost (id, name, labor_cost, 
      currency, adress_id, decoration_item_id, 
      create_time, status, remark
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{laborCost,jdbcType=DOUBLE}, 
      #{currency,jdbcType=VARCHAR}, #{adressId,jdbcType=BIGINT}, #{decorationItemId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert useGeneratedKeys="true" keyProperty="id" id="insertSelective" parameterType="com.jialian.api.domain.entity.LaborCost" >
    insert into labor_cost
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="laborCost != null" >
        labor_cost,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="adressId != null" >
        adress_id,
      </if>
      <if test="decorationItemId != null" >
        decoration_item_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="laborCost != null" >
        #{laborCost,jdbcType=DOUBLE},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="adressId != null" >
        #{adressId,jdbcType=BIGINT},
      </if>
      <if test="decorationItemId != null" >
        #{decorationItemId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByWhereSelective" parameterType="map" >
    update labor_cost
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.laborCost != null" >
        labor_cost = #{record.laborCost,jdbcType=DOUBLE},
      </if>
      <if test="record.currency != null" >
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.adressId != null" >
        adress_id = #{record.adressId,jdbcType=BIGINT},
      </if>
      <if test="record.decorationItemId != null" >
        decoration_item_id = #{record.decorationItemId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByWhere" parameterType="map" >
    update labor_cost
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      labor_cost = #{record.laborCost,jdbcType=DOUBLE},
      currency = #{record.currency,jdbcType=VARCHAR},
      adress_id = #{record.adressId,jdbcType=BIGINT},
      decoration_item_id = #{record.decorationItemId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=SMALLINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jialian.api.domain.entity.LaborCost" >
    update labor_cost
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="laborCost != null" >
        labor_cost = #{laborCost,jdbcType=DOUBLE},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="adressId != null" >
        adress_id = #{adressId,jdbcType=BIGINT},
      </if>
      <if test="decorationItemId != null" >
        decoration_item_id = #{decorationItemId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jialian.api.domain.entity.LaborCost" >
    update labor_cost
    set name = #{name,jdbcType=VARCHAR},
      labor_cost = #{laborCost,jdbcType=DOUBLE},
      currency = #{currency,jdbcType=VARCHAR},
      adress_id = #{adressId,jdbcType=BIGINT},
      decoration_item_id = #{decorationItemId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=SMALLINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
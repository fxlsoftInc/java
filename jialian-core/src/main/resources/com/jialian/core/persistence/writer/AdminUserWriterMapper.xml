<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jialian.core.persistence.writer.AdminUserWriterMapper" >
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from admin_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByWhere" parameterType="com.jialian.api.domain.entity.Where" >
    delete from admin_user
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jialian.api.domain.entity.AdminUser" >
    insert into admin_user (id, firstname, lastname, 
      name, email, username, 
      password, create_time, update_time, 
      logdate, lognum, admin_status, 
      remark,telephone)
    values (#{id,jdbcType=BIGINT}, #{firstname,jdbcType=VARCHAR}, #{lastname,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{username,jdbcType=CHAR}, 
      #{password,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{logdate,jdbcType=DATE}, #{lognum,jdbcType=INTEGER}, #{adminStatus,jdbcType=SMALLINT}, 
      #{remark,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jialian.api.domain.entity.AdminUser" >
    insert into admin_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="firstname != null" >
        firstname,
      </if>
      <if test="lastname != null" >
        lastname,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="logdate != null" >
        logdate,
      </if>
      <if test="lognum != null" >
        lognum,
      </if>
      <if test="adminStatus != null" >
        admin_status,
      </if>
      <if test="roleId !=null">
      	role_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="firstname != null" >
        #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null" >
        #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=CHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logdate != null" >
        #{logdate,jdbcType=DATE},
      </if>
      <if test="lognum != null" >
        #{lognum,jdbcType=INTEGER},
      </if>
      <if test="adminStatus != null" >
        #{adminStatus,jdbcType=SMALLINT},
      </if>
      <if test="roleId !=null">
      	#{roleId,jdbcType=SMALLINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByWhereSelective" parameterType="map" >
    update admin_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.firstname != null" >
        firstname = #{record.firstname,jdbcType=VARCHAR},
      </if>
      <if test="record.lastname != null" >
        lastname = #{record.lastname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=CHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logdate != null" >
        logdate = #{record.logdate,jdbcType=DATE},
      </if>
      <if test="record.lognum != null" >
        lognum = #{record.lognum,jdbcType=INTEGER},
      </if>
      <if test="record.adminStatus != null" >
        admin_status = #{record.adminStatus,jdbcType=SMALLINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
       <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByWhere" parameterType="map" >
    update admin_user
    set id = #{record.id,jdbcType=BIGINT},
      firstname = #{record.firstname,jdbcType=VARCHAR},
      lastname = #{record.lastname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=CHAR},
      password = #{record.password,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      logdate = #{record.logdate,jdbcType=DATE},
      lognum = #{record.lognum,jdbcType=INTEGER},
      admin_status = #{record.adminStatus,jdbcType=SMALLINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jialian.api.domain.entity.AdminUser" >
    update admin_user
    <set >
      <if test="firstname != null" >
        firstname = #{firstname,jdbcType=VARCHAR},
      </if>
      <if test="lastname != null" >
        lastname = #{lastname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logdate != null" >
        logdate = #{logdate,jdbcType=DATE},
      </if>
      <if test="lognum != null" >
        lognum = #{lognum,jdbcType=INTEGER},
      </if>
      <if test="adminStatus != null" >
        admin_status = #{adminStatus,jdbcType=SMALLINT},
      </if>
      <if test="roleId !=null">
      	role_id=#{roleId,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
       <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jialian.api.domain.entity.AdminUser" >
    update admin_user
    set firstname = #{firstname,jdbcType=VARCHAR},
      lastname = #{lastname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      username = #{username,jdbcType=CHAR},
      password = #{password,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      logdate = #{logdate,jdbcType=DATE},
      lognum = #{lognum,jdbcType=INTEGER},
      admin_status = #{adminStatus,jdbcType=SMALLINT},
      remark = #{remark,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
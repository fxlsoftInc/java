<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jialian.core.persistence.writer.SystemMessageWriterMapper" >
  <resultMap id="BaseResultMap" type="com.jialian.api.domain.entity.SystemMessage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="message_title" property="messageTitle" jdbcType="VARCHAR" />
    <result column="message_content" property="messageContent" jdbcType="VARCHAR" />
    <result column="message_status" property="messageStatus" jdbcType="INTEGER" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, message_title, message_content, message_status, send_time, update_time, 
    remark, creat_time, status
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from system_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByWhere" parameterType="com.jialian.api.domain.entity.Where" >
    delete from system_message
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jialian.api.domain.entity.SystemMessage" >
    insert into system_message (id, user_id, message_title, 
      message_content, message_status, send_time, 
      update_time, remark, creat_time, 
      status)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{messageTitle,jdbcType=VARCHAR}, 
      #{messageContent,jdbcType=VARCHAR}, #{messageStatus,jdbcType=INTEGER}, #{sendTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jialian.api.domain.entity.SystemMessage" >
    insert into system_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="messageTitle != null" >
        message_title,
      </if>
      <if test="messageContent != null" >
        message_content,
      </if>
      <if test="messageStatus != null" >
        message_status,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sendType != null" >
        send_type,
      </if>
      <if test="sendObj != null" >
        send_obj,
      </if>
      <if test="sendTimeType != null" >
        send_time_type,
      </if>
      <if test="sendUserId != null" >
        send_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageTitle != null" >
        #{messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null" >
        #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageStatus != null" >
        #{messageStatus,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sendType != null" >
        #{sendType,jdbcType=INTEGER},
      </if>
      <if test="sendObj != null" >
        #{sendObj,jdbcType=INTEGER},
      </if>
      <if test="sendTimeType != null" >
        #{sendTimeType,jdbcType=INTEGER},
      </if>
      <if test="sendUserId != null" >
        #{sendUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByWhereSelective" parameterType="map" >
    update system_message
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.messageTitle != null" >
        message_title = #{record.messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.messageContent != null" >
        message_content = #{record.messageContent,jdbcType=VARCHAR},
      </if>
      <if test="record.messageStatus != null" >
        message_status = #{record.messageStatus,jdbcType=INTEGER},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByWhere" parameterType="map" >
    update system_message
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      message_title = #{record.messageTitle,jdbcType=VARCHAR},
      message_content = #{record.messageContent,jdbcType=VARCHAR},
      message_status = #{record.messageStatus,jdbcType=INTEGER},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jialian.api.domain.entity.SystemMessage" >
    update system_message
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="messageTitle != null" >
        message_title = #{messageTitle,jdbcType=VARCHAR},
      </if>
      <if test="messageContent != null" >
        message_content = #{messageContent,jdbcType=VARCHAR},
      </if>
      <if test="messageStatus != null" >
        message_status = #{messageStatus,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jialian.api.domain.entity.SystemMessage" >
    update system_message
    set user_id = #{userId,jdbcType=INTEGER},
      message_title = #{messageTitle,jdbcType=VARCHAR},
      message_content = #{messageContent,jdbcType=VARCHAR},
      message_status = #{messageStatus,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jialian.core.persistence.writer.AdminRoleWriterMapper" >
 
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from admin_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByWhere" parameterType="com.jialian.api.domain.entity.Where" >
    delete from admin_role
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jialian.api.domain.entity.AdminRole" >
    insert into admin_role (id, parent_id, tree_level, 
      sort_order, role_type, user_id, 
      role_name)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{treeLevel,jdbcType=INTEGER}, 
      #{sortOrder,jdbcType=INTEGER}, #{roleType,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{roleName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jialian.api.domain.entity.AdminRole" >
    insert into admin_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="treeLevel != null" >
        tree_level,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="roleType != null" >
        role_type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="treeLevel != null" >
        #{treeLevel,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="roleType != null" >
        #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByWhereSelective" parameterType="map" >
    update admin_role
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.treeLevel != null" >
        tree_level = #{record.treeLevel,jdbcType=INTEGER},
      </if>
      <if test="record.sortOrder != null" >
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.roleType != null" >
        role_type = #{record.roleType,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByWhere" parameterType="map" >
    update admin_role
    set id = #{record.id,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      tree_level = #{record.treeLevel,jdbcType=INTEGER},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      role_type = #{record.roleType,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jialian.api.domain.entity.AdminRole" >
    update admin_role
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="treeLevel != null" >
        tree_level = #{treeLevel,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="roleType != null" >
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jialian.api.domain.entity.AdminRole" >
    update admin_role
    set parent_id = #{parentId,jdbcType=BIGINT},
      tree_level = #{treeLevel,jdbcType=INTEGER},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      role_type = #{roleType,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      role_name = #{roleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jialian.core.persistence.reader.SemiDecorationOrderReaderMapper" >
  <resultMap id="BaseResultMap" type="com.jialian.api.domain.entity.SemiDecorationOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="order_total_price" property="orderTotalPrice" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_type" property="orderType" jdbcType="SMALLINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="SemDecOrderResultMap" type="com.jialian.api.domain.vo.SemDecorationOrderVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="order_total_price" property="orderTotalPrice" jdbcType="DOUBLE" />
    <result column="order_sem_price" property="orderSemPrice" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="order_type" property="orderType" jdbcType="SMALLINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <association property="semDecOrderInfo" column="id" select="com.jialian.core.persistence.reader.SemiDecorationOrderInfoReaderMapper.selectSemiDecOrderInfo"></association>
  </resultMap>
  <sql id="Base_Column_List" >
    id, order_no, user_id, order_total_price, create_time, update_time, order_type, remark ,order_sem_price
  </sql>
  <select id="selectByWhere" resultMap="BaseResultMap" parameterType="com.jialian.api.domain.entity.Where" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from semi_decoration_order
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.reader.CommonReaderMapper.Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from semi_decoration_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectSemDecOrderByPrimaryKey" resultMap="SemDecOrderResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from semi_decoration_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="countByWhere" parameterType="com.jialian.api.domain.entity.Where" resultType="java.lang.Integer" >
    select count(*) from semi_decoration_order
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.reader.CommonReaderMapper.Example_Where_Clause" />
    </if>
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jialian.core.persistence.writer.CollectWriterMapper" >
  <resultMap id="BaseResultMap" type="com.jialian.api.domain.entity.Collect" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="collect_type" property="collectType" jdbcType="SMALLINT" />
    <result column="collect_status" property="collectStatus" jdbcType="BIGINT" />
    <result column="collect_time" property="collectTime" jdbcType="TIMESTAMP" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, parent_id, collect_type, collect_status, collect_time, creat_time, update_time, 
    status, remark
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from collect
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByWhere" parameterType="com.jialian.api.domain.entity.Where" >
    delete from collect
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jialian.api.domain.entity.Collect" >
    insert into collect (id, user_id, parent_id, 
      collect_type, collect_status, collect_time, 
      creat_time, update_time, status, 
      remark)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{collectType,jdbcType=SMALLINT}, #{collectStatus,jdbcType=BIGINT}, #{collectTime,jdbcType=TIMESTAMP}, 
      #{creatTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jialian.api.domain.entity.Collect" >
    insert into collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="collectType != null" >
        collect_type,
      </if>
      <if test="collectStatus != null" >
        collect_status,
      </if>
      <if test="collectTime != null" >
        collect_time,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="collectType != null" >
        #{collectType,jdbcType=SMALLINT},
      </if>
      <if test="collectStatus != null" >
        #{collectStatus,jdbcType=BIGINT},
      </if>
      <if test="collectTime != null" >
        #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByWhereSelective" parameterType="map" >
    update collect
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.collectType != null" >
        collect_type = #{record.collectType,jdbcType=SMALLINT},
      </if>
      <if test="record.collectStatus != null" >
        collect_status = #{record.collectStatus,jdbcType=BIGINT},
      </if>
      <if test="record.collectTime != null" >
        collect_time = #{record.collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByWhere" parameterType="map" >
    update collect
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      collect_type = #{record.collectType,jdbcType=SMALLINT},
      collect_status = #{record.collectStatus,jdbcType=BIGINT},
      collect_time = #{record.collectTime,jdbcType=TIMESTAMP},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="com.jialian.core.persistence.writer.CommonWriterMapper.Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jialian.api.domain.entity.Collect" >
    update collect
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="collectType != null" >
        collect_type = #{collectType,jdbcType=SMALLINT},
      </if>
      <if test="collectStatus != null" >
        collect_status = #{collectStatus,jdbcType=BIGINT},
      </if>
      <if test="collectTime != null" >
        collect_time = #{collectTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jialian.api.domain.entity.Collect" >
    update collect
    set user_id = #{userId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      collect_type = #{collectType,jdbcType=SMALLINT},
      collect_status = #{collectStatus,jdbcType=BIGINT},
      collect_time = #{collectTime,jdbcType=TIMESTAMP},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
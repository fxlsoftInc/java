<?xml version="1.0" encoding="UTF-8"?>
<!-- Repository and Service layers -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- ========================= Repository RESOURCE DEFINITIONS ========================= -->
	<!-- redis config -->
	<!-- POOL配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 池中可借的最大数 -->
		<!-- <property name="maxActive" value="120" /> -->
		<!-- 允许池中空闲的最大连接数 -->
		<property name="maxIdle" value="30" />
		<!-- 允许池中空闲的最小连接数 -->
		<property name="minIdle" value="10" />
		<!-- 获取连接最大等待时间（毫秒） -->
		<!-- <property name="maxWait" value="12000" /> -->
		<!-- 当maxActive到达最大数，获取连接时的操作  0.抛异常 1.阻塞等待 2.创建新的（maxActive将失效） -->
		<!-- <property name="whenExhaustedAction" value="1" /> -->
		<!-- 在获取连接时，是否验证有效性 -->
		<property name="testOnBorrow" value="true" />
		<!-- 在归还连接时，是否验证有效性 -->
		<property name="testOnReturn" value="true" />
		<!-- 当连接空闲时，是否验证有效性 -->
		<property name="testWhileIdle" value="true" />
		<!-- 设定间隔没过多少毫秒进行一次后台连接清理的行动 -->
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<!-- 每次检查的连接数 -->
		<property name="numTestsPerEvictionRun" value="5" />
    </bean>
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<property name="hostName" value="${redis.host}"></property>
		<property name="port" value="${redis.port}"></property>
		<property name="timeout" value="${redis.timeout}"></property>
		<property name="password" value="${redis.password}"></property> 
		<!--<property name="database" value="${redis.database}"></property> -->
	</bean>
	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory" >
        <property name="keySerializer">  
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
        </property>  
    </bean>
</beans>